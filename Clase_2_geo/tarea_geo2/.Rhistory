View(vacunas_caba)
meses_esp <- c("enero", "febrero", "marzo", "abril", "mayo",
"junio", "julio", "agosto", "septiembre", "octubre",
"noviembre", "diciembre")
vacunas_mes <- vacunas_caba %>%
group_by(anio, mes) %>%
summarise(total = sum(DOSIS_2)) %>%
mutate(mes = factor(mes, levels=meses_esp )) %>%
arrange(anio, mes)
View(vacunas_mes)
base_sube <- read.csv("https://raw.githubusercontent.com/pachedi/INTRO_R_CS/main/dat-ab-usuarios-2020.csv",sep=';', encoding = 'UTF-8')
View(base_sube)
unique(base_sube$AMBA)
base_amba <- base_sube %>%
filter(AMBA == "SI")
base_totales <- base_amba %>%
filter(TIPO_TRANSPORTE == "TOTAL")
View(base_totales)
base_totales <- base_sube %>%
filter(AMBA == "SI" & TIPO_TRANSPORTE == "TOTAL")
base_totales <- base_totales %>%
select(-c("AMBA", "DATO_PRELIMINAR"))
head(base_totales)
class(base_totales$DIA_TRANSPORTE)
base_totales <- base_totales %>%
mutate(DIA_TRANSPORTE = ymd(DIA_TRANSPORTE))
class(base_totales$DIA_TRANSPORTE)
total_agrupado <- base_totales %>%
group_by(DIA_TRANSPORTE) %>%
summarise(cantidad_viajes = sum(CANT_TRJ))
View(total_agrupado)
plot(total_agrupado$cantidad_viajes, type="l")
option(scipen = 999)
options(scipen = 999)
plot(total_agrupado$cantidad_viajes, type="l")
ggplot(data= total_agrupado, aes(x= DIA_TRANSPORTE,
y=cantidad_viajes))
ggplot(data= total_agrupado)+
aes(x= DIA_TRANSPORTE,
y=cantidad_viajes)
ggplot(data= total_agrupado)+
aes(x= DIA_TRANSPORTE,
y=cantidad_viajes)+
geom_line()
total_agrupado <- base_totales %>%
group_by(DIA_TRANSPORTE, GENERO) %>%
summarise(cantidad_viajes = sum(CANT_TRJ))
View(total_agrupado)
ggplot(data = total_agrupado, aes(x=DIA_TRANSPORTE,
y= cantidad_viajes))+
geom_line()+
facet_wrap(~GENERO)
unique(total_agrupado$GENERO)
total_agrupado$cantidad_viajes[total_agrupado$cantidad_viajes == ""] <- "no_registrado"
ggplot(data = total_agrupado,
aes(x=DIA_TRANSPORTE,
y= cantidad_viajes))+
geom_line()+
facet_wrap(~GENERO)
View(total_agrupado)
total_agrupado$cantidad_viajes[total_agrupado$cantidad_viajes == ""] <- "no_registrado"
View(total_agrupado)
total_agrupado$GENERO[total_agrupado$GENERO == ""] <- "no_registrado"
ggplot(data = total_agrupado,
aes(x=DIA_TRANSPORTE,
y= cantidad_viajes))+
geom_line()+
facet_wrap(~GENERO)
total_agrupado$GENERO[total_agrupado$GENERO == ""] <- "no_registrado"
ggplot(data = total_agrupado,
aes(x=DIA_TRANSPORTE,
y= cantidad_viajes))+
geom_line()+
facet_wrap(~GENERO)
View(total_agrupado)
ggplot(data = total_agrupado,
aes(x=DIA_TRANSPORTE,
y= cantidad_viajes))+
geom_line()
total_agrupado <- base_totales %>%
group_by(DIA_TRANSPORTE, GENERO) %>%
summarise(cantidad_viajes = sum(CANT_TRJ))
ggplot(data = total_agrupado,
aes(x=DIA_TRANSPORTE,
y= cantidad_viajes))+
geom_line()+
facet_wrap(~GENERO)
total_agrupado$GENERO[total_agrupado$GENERO == ""] <- "no_registrado"
ggplot(data = total_agrupado,
aes(x=DIA_TRANSPORTE,
y= cantidad_viajes))+
geom_line()+
facet_wrap(~GENERO)
total_agrupado <- base_totales %>%
group_by(DIA_TRANSPORTE, GENERO) %>%
summarise(cantidad_viajes = sum(CANT_TRJ))
total_agrupado$GENERO[total_agrupado$GENERO == ""] <- "no_registrado"
ggplot(data = total_agrupado,
aes(x=DIA_TRANSPORTE,
y= cantidad_viajes))+
geom_line()+
facet_wrap(~GENERO)
ggplot(data = total_agrupado,
aes(x=DIA_TRANSPORTE,
y= cantidad_viajes))+
geom_line()
ggplot(data = total_agrupado,
aes(x=DIA_TRANSPORTE,
y= cantidad_viajes))+
geom_line()+
scale_x_date(date_breaks = "1 month")
ggplot(data = total_agrupado,
aes(x=DIA_TRANSPORTE,
y= cantidad_viajes))+
geom_line()+
scale_x_date(date_breaks = "1 month")+
theme(axis.text.x = element_text(angle= 90))
ggplot(data = total_agrupado,
aes(x=DIA_TRANSPORTE,
y= cantidad_viajes))+
geom_line()+
scale_x_date(date_breaks = "1 month")+
theme(axis.text.x = element_text(angle= 45))
ggplot(data = total_agrupado,
aes(x=DIA_TRANSPORTE,
y= cantidad_viajes))+
geom_line()+
scale_x_date(date_breaks = "1 month")+
theme(axis.text.x = element_text(angle= 90))
ggplot(data = total_agrupado,
aes(x=DIA_TRANSPORTE,
y= cantidad_viajes))+
geom_line()+
scale_x_date(position = "top")
ggplot(data = total_agrupado,
aes(x=DIA_TRANSPORTE,
y= cantidad_viajes))+
geom_line()+
scale_x_date(position = "top")+
theme_minimal()
ggplot(data=total_agrupado,aes(x=DIA_TRANSPORTE,
y=cantidad_viajes,
col=GENERO))
ggplot(data=total_agrupado,aes(x=DIA_TRANSPORTE,
y=cantidad_viajes,
col=GENERO))+
geom_line()
ggplot(data=total_agrupado,aes(x=DIA_TRANSPORTE,
y=cantidad_viajes,
col=GENERO))+
geom_line()+
theme_minimal()
ggplot(data=total_agrupado,aes(x=DIA_TRANSPORTE,
y=cantidad_viajes,
col=GENERO))+
geom_line()+
theme_minimal()+
labs(title = "Movilidad del AMBA",
subtitle = "2020",
caption="Fuente: Datos abiertos SUBE")
ggplot(data=total_agrupado,aes(x=DIA_TRANSPORTE,
y=cantidad_viajes,
col=GENERO))+
geom_line()+
theme_minimal()+
labs(title = "Movilidad del AMBA",
subtitle = "2020",
caption="Fuente: Datos abiertos SUBE")+
scale_x_date(breaks = "1 month")+
theme(axis.text.x = element_text(angle=90))
ggplot(data=total_agrupado,aes(x=DIA_TRANSPORTE,
y=cantidad_viajes,
col=GENERO))+
geom_line()+
theme_minimal()+
labs(title = "Movilidad del AMBA",
subtitle = "2020",
caption="Fuente: Datos abiertos SUBE",
x="Cantidad de viajes",
y= "Fecha")+
scale_x_date(breaks = "1 month")+
theme(axis.text.x = element_text(angle=90))
ggplot(data=total_agrupado,aes(x=DIA_TRANSPORTE,
y=cantidad_viajes,
col=GENERO))+
geom_line()+
geom_vline(aes(xintercept= as.Date("2020-03-20")),
col="grey", linetype = "dashed")+
theme_minimal()+
labs(title = "Movilidad del AMBA",
subtitle = "2020",
caption="Fuente: Datos abiertos SUBE",
x="Cantidad de viajes",
y= "Fecha")+
scale_x_date(breaks = "1 month")+
theme(axis.text.x = element_text(angle=90))
ggplot(data=total_agrupado,aes(x=DIA_TRANSPORTE,
y=cantidad_viajes,
col=GENERO))+
geom_line()+
geom_vline(aes(xintercept= as.Date("2020-03-20")),
col="black", linetype = "dashed")+
theme_minimal()+
labs(title = "Movilidad del AMBA",
subtitle = "2020",
caption="Fuente: Datos abiertos SUBE",
x="Cantidad de viajes",
y= "Fecha")+
scale_x_date(breaks = "1 month")+
theme(axis.text.x = element_text(angle=90))
ggplot(data=total_agrupado,aes(x=DIA_TRANSPORTE,
y=cantidad_viajes,
col=GENERO))+
geom_line()+
geom_vline(aes(xintercept= as.Date("2020-03-20")),
col="black", linetype = "dashed")+
geomhline(aes(yintercept= mean(cantidad_viajes)))+
theme_minimal()+
labs(title = "Movilidad del AMBA",
subtitle = "2020",
caption="Fuente: Datos abiertos SUBE",
x="Cantidad de viajes",
y= "Fecha")+
scale_x_date(breaks = "1 month")+
theme(axis.text.x = element_text(angle=90))
ggplot(data=total_agrupado,aes(x=DIA_TRANSPORTE,
y=cantidad_viajes,
col=GENERO))+
geom_line()+
geom_vline(aes(xintercept= as.Date("2020-03-20")),
col="black", linetype = "dashed")+
geom_hline(aes(yintercept= mean(cantidad_viajes)))+
theme_minimal()+
labs(title = "Movilidad del AMBA",
subtitle = "2020",
caption="Fuente: Datos abiertos SUBE",
x="Cantidad de viajes",
y= "Fecha")+
scale_x_date(breaks = "1 month")+
theme(axis.text.x = element_text(angle=90))
ggplot(data=total_agrupado,aes(x=DIA_TRANSPORTE,
y=cantidad_viajes,
col=GENERO))+
geom_line()+
geom_vline(aes(xintercept= as.Date("2020-03-20")),
col="black", linetype = "dashed")+
geom_hline(aes(yintercept= mean(cantidad_viajes)),
linetype="dashed")+
theme_minimal()+
labs(title = "Movilidad del AMBA",
subtitle = "2020",
caption="Fuente: Datos abiertos SUBE",
x="Cantidad de viajes",
y= "Fecha")+
scale_x_date(breaks = "1 month")+
theme(axis.text.x = element_text(angle=90))
ggplot(data=total_agrupado,aes(x=DIA_TRANSPORTE,
y=cantidad_viajes,
col=GENERO))+
geom_line()+
geom_vline(aes(xintercept= as.Date("2020-03-20")),
col="black", linetype = "dashed")+
geom_hline(aes(yintercept= mean(cantidad_viajes)),
linetype="dashed",col= "red")+
theme_minimal()+
labs(title = "Movilidad del AMBA",
subtitle = "2020",
caption="Fuente: Datos abiertos SUBE",
x="Cantidad de viajes",
y= "Fecha")+
scale_x_date(breaks = "1 month")+
theme(axis.text.x = element_text(angle=90))
library(plotly)
ggsave("grafico_sube.png", width = 16, height = 8)
getwd()
p <- ggplot(data=total_agrupado,aes(x=DIA_TRANSPORTE,
y=cantidad_viajes,
col=GENERO))+
geom_line()+
geom_vline(aes(xintercept= as.Date("2020-03-20")),
col="black", linetype = "dashed")+
geom_hline(aes(yintercept= mean(cantidad_viajes)),
linetype="dashed",col= "red")+
theme_minimal()+
labs(title = "Movilidad del AMBA",
subtitle = "2020",
caption="Fuente: Datos abiertos SUBE",
x="Cantidad de viajes",
y= "Fecha")+
scale_x_date(breaks = "1 month")+
theme(axis.text.x = element_text(angle=90))
ggplotly(p)
htmltools::save_html(
html= htmltools::as.tags(
x= plotly::toWebGL(p),
standalone=TRUE),
file="plot_interactivo.html")
getwd()
View(base_totales)
unique(base_totales$MOTIVO_ATSF)
motivo_descuento <- base_totales %>%
filter(GENERO == "M" | GENERO == "F") %>%
filter(MOTIVO_ATSF != "")
View(motivo_descuento)
descuento_octubre <- motivo_descuento %>%
filter(DIA_TRANSPORTE >= "2020-10-01" &
DIA_TRANSPORTE < "2020-11-01")
View(descuento_octubre)
octubre_agrupado <- descuento_octubre %>%
group_by(MOTIVO_ATSF) %>%
summarise(Total = sum(CANT_TRJ))
View(octubre_agrupado)
ggplot(data= octubre_agrupado, aes(x=MOTIVO_ATSF,
y=Total))+
geom_col()
ggplot(data= octubre_agrupado, aes(x=MOTIVO_ATSF,
y=Total))+
geom_col()+
coord_flip()
ggplot(data= octubre_agrupado, aes(x=MOTIVO_ATSF,
y=Total))+
geom_col()
ggplot(data= octubre_agrupado, aes(y=MOTIVO_ATSF,
x=Total))+
geom_col()
ggplot(data= octubre_agrupado, aes(x=MOTIVO_ATSF,
y=Total))+
geom_col()+
coord_flip()
ggplot(data= octubre_agrupado, aes(x= reorder(MOTIVO_ATSF, Total),
y=Total))+
geom_col()+
coord_flip()
ggplot(data= octubre_agrupado, aes(
x= reorder(MOTIVO_ATSF, -Total),
y=Total))+
geom_col()+
coord_flip()
octubre_agrupado <- descuento_octubre %>%
group_by(MOTIVO_ATSF, GENERO) %>%
summarise(Total = sum(CANT_TRJ))
octubre_agrupado_g <- descuento_octubre %>%
group_by(MOTIVO_ATSF, GENERO) %>%
summarise(Total = sum(CANT_TRJ))
View(octubre_agrupado_g)
ggplot(data=octubre_agrupado_g,
aes(x= reorder(MOTIVO_ATSF, Total),
y= Total))+
geom_col()+
coord_flip()
ggplot(data=octubre_agrupado_g,
aes(x= reorder(MOTIVO_ATSF, Total),
y= Total,
fill= GENERO))+
geom_col()+
coord_flip()
ggplot(data=octubre_agrupado_g,
aes(x= reorder(MOTIVO_ATSF, Total),
y= Total,
fill= GENERO))+
geom_col(position= position_dodge())+
coord_flip()
ggplot(data=octubre_agrupado_g,
aes(x= reorder(MOTIVO_ATSF, Total),
y= Total,
fill= GENERO))+
geom_col(position= position_dodge(),
col="black")+
coord_flip()
ggplot(data=octubre_agrupado_g,
aes(x= reorder(MOTIVO_ATSF, Total),
y= Total,
fill= GENERO))+
geom_col(position= position_dodge(),
color="black")+
coord_flip()
ggplot(data=octubre_agrupado_g,
aes(x= reorder(MOTIVO_ATSF, Total),
y= Total,
fill= GENERO))+
geom_col(position= position_dodge(),
color="black")+
coord_flip()+
theme_minimal()
ggplot(data=octubre_agrupado_g,
aes(x= reorder(MOTIVO_ATSF, Total),
y= Total,
fill= GENERO))+
geom_col(position= position_dodge(),
color="black")+
coord_flip()+
labs(x="Motivo de descuento",
y="Cantidad de viajes")+
theme_minimal()
View(octubre_agrupado)
unique(octubre_agrupado$GENERO)
unique(octubre_agrupado$MOTIVO_ATSF)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(sf)
library(tidyverse)
library(ggrepel)
library(units)
library(openxlsx)
secciones <- st_read("Seccionado_2021/SECC_CE_20210101.shp")
viviendas_censales <- load("censo_2021/R/CensoViviendas_2021.RData")
coruna <- secciones %>%
filter(CPRO == "15")
ggplot()+
geom_sf(data=coruna)
View(Metadatos)
View(coruna)
View(coruna)
viviendas_coruna <- Microdatos %>%
filter(CPRO == "15")
secciones_viviendas <- left_join(coruna ,)
View(viviendas_coruna)
viviendas_coruna <- viviendas_coruna %>%
mutate(CUSEC = paste0(CMUN,CDIS,CSEC))
View(coruna)
secciones_edad <- read.csv("secciones_censales_coruna.csv")
View(secciones_edad)
secciones_edad <- read.csv("secciones_censales_coruna.csv",sep=";")
View(secciones_edad)
secciones_edad <- secciones_edad %>%
rename(CUSEC = 1,
lugar = 3)
secciones_edad <- read.csv("secciones_censales_coruna.csv",sep=";")
secciones_edad <- secciones_edad %>%
rename(CUSEC = 1,
lugar = 3)
secciones_coruna <- unique(coruna$CUSEC)
secciones_censales_coruna <- secciones_edad %>%
filter(CUSSEC %in% secciones_coruna)
secciones_censales_coruna <- secciones_edad %>%
filter(CUSEC %in% secciones_coruna)
View(secciones_censales_coruna)
piramide <- read.csv("61441.csv", sep = ";")
setwd("C:/Users/dpach/OneDrive - sociales.UBA.ar/CURSO INFO GEO R_HAB/Clase_2_geo/tarea_geo2")
piramide <- read.csv("61441.csv", sep = ";")
piramide <- read.csv("piramida_espana.csv", sep = ";")
piramide <- read.csv("piramida_espana.csv", sep = ";")
View(secciones_edad)
secciones_censales_coruna <- secciones_censales_coruna %>%
filter(Lugar == "Total")
secciones_censales_coruna <- secciones_censales_coruna %>%
filter(lugar == "Total")
View(secciones_censales_coruna)
secciones_censales_coruna <- secciones_censales_coruna %>%
filter(lugar == "Total" & Sexo == "Ambos sexos")
para_mapear <- left_join(coruna, secciones_censales_coruna)
View(para_mapear)
View(para_mapear)
ggplot(data= para_mapear)+
geom_sf(aes(fill=Total))
para_mapear <- left_join(coruna, secciones_censales_coruna) %>%
mutate(Total = as.numeric(Total))
ggplot(data= para_mapear)+
geom_sf(aes(fill=Total, col = NA))
View(secciones_censales_coruna)
secciones_censales_coruna$Total <- gsub("\\.", "", secciones_censales_coruna$Total)
para_mapear <- left_join(coruna, secciones_censales_coruna) %>%
mutate(Total = as.numeric(Total))
ggplot(data= para_mapear)+
geom_sf(aes(fill=Total,col=NA))
ggplot(data= para_mapear)+
geom_sf(aes(fill=Total))
ggplot(data= para_mapear)+
geom_sf(aes(fill=Total),col=NA)
ggplot(data= para_mapear)+
geom_sf(aes(fill=Total),col=NA)+
scale_fill_viridis_c()
ggplot(data= para_mapear)+
geom_sf(aes(fill=Total),col=NA)+
scale_fill_viridis_c()+
theme_minimal()+
labs(title = "Cantidad de población por sección censal",
subtitle = "Coruña, España")
ggplot(data= para_mapear)+
geom_sf(aes(fill=Total),col=NA)+
scale_fill_viridis_c()+
theme_minimal()+
labs(title = "Cantidad de población por sección censal",
subtitle = "Coruña, España",
caption = "Elaboración propia en base a datos Censales (2021)")
piramide <- read.csv("piramida_espana.csv", sep = ";")
ggplot(data= para_mapear)+
annotation_map_tile(type = "osm", zoom = 12) +
geom_sf(aes(fill=Total),col=NA)+
scale_fill_viridis_c()+
theme_minimal()+
labs(title = "Cantidad de población por sección censal",
subtitle = "Coruña, España",
caption = "Elaboración propia en base a datos Censales (2021)")
library(ggspatial)
ggplot(data= para_mapear)+
annotation_map_tile(type = "osm", zoom = 12) +
geom_sf(aes(fill=Total),col=NA)+
scale_fill_viridis_c()+
theme_minimal()+
labs(title = "Cantidad de población por sección censal",
subtitle = "Coruña, España",
caption = "Elaboración propia en base a datos Censales (2021)")
piramide <- read.csv("piramida_espana.csv", sep = ";")
piramide <- read.csv("piramide_espana.csv", sep = ";")
coruna <- piramide %>%
filter(startsWith(Provincias, "15"))
coruna_total <- coruna %>%
rename(Edad = 6) %>%
filter(Secciones == "" & Municipios == "" & Sexo != "Ambos sexos" & Edad != "Total")
coruna_total$Total <- gsub("\\.", "", coruna_total$Total)
coruna_total <- coruna_total %>%
mutate(Total = as.numeric(Total))
