ors_api_key("5b3ce3597851110001cf62482569a3c36df84e6cab6cefb4f4925f82")
santa_fe <- ors_geocode("Santa Fe", boundary.country = "AR")
leaflet() %>%
addTiles() %>%
addGeoJSON(santa_fe) %>%
fitBBox(santa_fe$bbox)
?ors_geocode
santa_fe <- ors_geocode("Santa Fe", boundary.country = "AR",
size=1)
leaflet() %>%
addTiles() %>%
addGeoJSON(santa_fe) %>%
fitBBox(santa_fe$bbox)
santa_fe <- ors_geocode("Santa Fe", boundary.country = "AR")
leaflet() %>%
addTiles() %>%
addGeoJSON(santa_fe) %>%
fitBBox(santa_fe$bbox)
santa_fe <- ors_geocode("Santa Fe", boundary.country = "AR")
santa_fe <- ors_geocode("Santa Fe", boundary.country = "AR")
leaflet() %>%
addTiles() %>%
addGeoJSON(santa_fe) %>%
fitBBox(santa_fe$bbox)
obelisco <- ors_geocode("obelisco", boundary.country = "AR", size=1)
leaflet() %>%
addTiles() %>%
addGeoJSON(obelisco) %>%
fitBBox(obelisco$bbox)
obelisco$features[[1]]$geometry$coordinates
salida <- obelisco$features[[1]]$geometry$coordinates
rosario <- ors_geocode("rosario", boundary.country = "AR", size=1)
leaflet() %>%
addTiles() %>%
addGeoJSON(rosario) %>%
fitBBox(rosario$bbox)
llegada <- rosario$features[[1]]$geometry$coordinates
leaflet() %>%
addTiles() %>%
addGeoJSON(rosario) %>%
fitBBox(rosario$bbox)
ruta <- ors_directions(coordenadas)
coordenadas <- list(salida, llegada)
ruta <- ors_directions(coordenadas)
leaflet() %>%
addTiles() %>%
addGeoJSON(ruta, fill=FALSE) %>%
fitBBox(ruta$bbox)
y = ors_geocode(location = salida,
format = "geojson")
leaflet() %>%
addTiles() %>%
addGeoJSON(y) %>%
fitBBox(y$bbox)
y = ors_geocode(location = salida,
format = "geojson")
leaflet() %>%
addTiles() %>%
addGeoJSON(y) %>%
fitBBox(y$bbox)
leaflet() %>%
addTiles() %>%
addGeoJSON(y) %>%
addMarkers(popup = ~htmlEscape(y$features[[1]]$properties$label)) %>%
fitBBox(y$bbox)
leaflet() %>%
addTiles() %>%
addGeoJSON(y) %>%
fitBBox(y$bbox)
coordenadas_x <- c()
coordenadas_y <- c()
etiqueta <- c()
pais <- c()
ciudad <- c()
comuna <- c()
barrio <- c()
for(i in 1:length(y$features)){
# coordenadas
coordenadas_x <- append(coordenadas_x,y$features[[i]]$geometry$coordinates[1])
coordenadas_y <- append(coordenadas_y,y$features[[i]]$geometry$coordinates[2])
#nombre
etiqueta <- append(etiqueta,  y$features[[i]]$properties$label)
#pais
pais <- append(pais,y$features[[i]]$properties$country)
# ciudad
ciudad <- append(ciudad,  y$features[[i]]$properties$region)
# barrio
barrio <- append(barrio,y$features[[i]]$properties$neighbourhood)
#comuna
comuna <- append(comuna, y$features[[i]]$properties$borough)
}
resultado <- data.frame(coordenadas_x, coordenadas_y,
etiqueta, pais,comuna, barrio, ciudad)
resultado_sf <- st_as_sf(resultado,
coords = c("coordenadas_x", "coordenadas_y"),
crs = 4326)
library(sf)
library(sf)
coordenadas_x <- c()
coordenadas_y <- c()
etiqueta <- c()
pais <- c()
ciudad <- c()
comuna <- c()
barrio <- c()
for(i in 1:length(y$features)){
# coordenadas
coordenadas_x <- append(coordenadas_x,y$features[[i]]$geometry$coordinates[1])
coordenadas_y <- append(coordenadas_y,y$features[[i]]$geometry$coordinates[2])
#nombre
etiqueta <- append(etiqueta,  y$features[[i]]$properties$label)
#pais
pais <- append(pais,y$features[[i]]$properties$country)
# ciudad
ciudad <- append(ciudad,  y$features[[i]]$properties$region)
# barrio
barrio <- append(barrio,y$features[[i]]$properties$neighbourhood)
#comuna
comuna <- append(comuna, y$features[[i]]$properties$borough)
}
resultado <- data.frame(coordenadas_x, coordenadas_y,
etiqueta, pais,comuna, barrio, ciudad)
resultado_sf <- st_as_sf(resultado,
coords = c("coordenadas_x", "coordenadas_y"),
crs = 4326)
st_write(resultado_sf, "obelisco.shp", crs=4326)
resultado <- data.frame(coordenadas_x, coordenadas_y,
etiqueta, pais,comuna, barrio, ciudad)
resultado_sf <- st_as_sf(resultado,
coords = c("coordenadas_x", "coordenadas_y"),
crs = 4326)
library(units)
View(resultado_sf)
View(resultado)
leaflet(resultado) %>%
addTiles() %>%
addMarkers(~coordenadas_x, ~coordenadas_y) %>%
fitBBox(y$bbox)
leaflet(resultado) %>%
addTiles() %>%
addMarkers(~coordenadas_x, ~coordenadas_y,
popup = ~htmlEscape(etiqueta)) %>%
fitBBox(y$bbox)
library(htmltools)
leaflet(resultado) %>%
addTiles() %>%
addMarkers(~coordenadas_x, ~coordenadas_y,
popup = ~htmlEscape(etiqueta)) %>%
fitBBox(y$bbox)
ciudades <- data.frame(name = c("caba", "rosario"),
x = c(salida[1], llegada[1]),
y = c(salida[2], llegada[2])) %>%
st_as_sf(coords = c("x", "y"), crs = 4326)
distancia <- st_distance(ciudades)
distancia
colnames(distancia) <- ciudades$name
rownames(distancia) <- ciudades$name
distancia
units(distancia) <- make_units(km)
colnames(distancia) <- ciudades$name
rownames(distancia) <- ciudades$name
distancia
direcciones <- tribble(
~name,                  ~addr,
"Casa Rosada",          "Balcarce 78, Montserrat, Ciudad autonoma de buenos aires, 1064",
"Congreso de la Nación", "Entre Rios and Rivadavia, Balvanera, Ciudad autonoma de buenos aires, 1033",
"Tribunales",         "Talcahuano 624, San Nicolas, Ciudad autonoma de buenos aires, 1013"
)
View(direcciones)
direcciones <- tribble(
~nombre,                  ~direccion,
"Casa Rosada",          "Balcarce 78, Montserrat, Ciudad autonoma de buenos aires, 1064",
"Congreso de la Nación", "Entre Rios and Rivadavia, Balvanera, Ciudad autonoma de buenos aires, 1033",
"Tribunales",         "Talcahuano 624, San Nicolas, Ciudad autonoma de buenos aires, 1013"
)
puntos_direcciones <- arc_geo(direcciones$direccion, lat = "latitude", long = "longitude")
library(arcgeocoder)
puntos_direcciones <- arc_geo(direcciones$direccion, lat = "latitude", long = "longitude")
View(puntos_direcciones)
leaflet() %>%
addTiles() %>%
addMarkers(data = puntos_direcciones,
lng = ~longitude, lat = ~latitude)
reverse <- arc_reverse_geo(
x = puntos_direcciones$longitude,
y = puntos_direcciones$latitude,
address = "direccion_encontrada"
)
View(reverse)
leaflet() %>%
addTiles() %>%
addMarkers(data = reverse,
lng = ~x, lat = ~y)
casa_rosada <- arc_geo_multi(
address = "Casa Rosada",
city = "Buenos Aires",
countrycode = "AR",
langcode = "ES",
custom_query = list(outFields = "LongLabel")
)
View(casa_rosada)
casa_rosada <- arc_geo_multi(
address = "Teatro Colon",
city = "Buenos Aires",
countrycode = "AR",
langcode = "ES",
custom_query = list(outFields = "LongLabel")
)
View(casa_rosada)
?arc_geo_multi
leaflet() %>%
addTiles() %>%
addMarkers(data = casa_rosada,
lng = ~lon, lat = ~lat)
casa_rosada %>%
select(lat,lon, LongLabel)
#install_github("wch/webshot")
library(htmlwidgets)
library(webshot)
casa_rosada_arte <- arc_geo_categories("Arts and entertainment",
x = casa_rosada$lon,
y = casa_rosada$lat,
limit = 50, # cantidad de resultados
full_results = TRUE
)
casa_rosada_arte <- arc_geo_categories("Arts and entertainment",
x = casa_rosada$lon,
y = casa_rosada$lat,
limit = 50, # cantidad de resultados
full_results = TRUE
)
leaflet() %>%
addTiles() %>%
addMarkers(data = casa_rosada_arte,
lng = ~lon, lat = ~lat,
popup = ~htmlEscape(Match_addr))
View(casa_rosada_arte)
casa_rosada_arte <- st_as_sf(casa_rosada_arte,
coords = c("lon", "lat"),
crs = 4326
)
View(casa_rosada_arte)
monserrat <- nominatimlite::geo_lite_sf(address = "retiro, Comuna 1, Ciudad autonoma de Buenos aires, Argentina", points_only = FALSE)
monserrat_calles <- opq(monserrat) %>%
add_osm_feature(key = "highway") %>%
osmdata_sf()
library(osmdata)
monserrat_calles <- opq(monserrat) %>%
add_osm_feature(key = "highway") %>%
osmdata_sf()
monserrat_calles <-st_intersection(monserrat_calles$osm_lines, monserrat)
ggplot()+
geom_sf(data=casa_rosada_arte, aes(col= Type))
barrios <- st_read("base_clase_4/barrios_caba/barrios_wgs84.shp")
microcentro <- c("SAN NICOLAS", "SAN TELMO", "MONSERRAT",
"PUERTO MADERO")
comuna1 <- nominatimlite::geo_lite_sf(address = "Comuna 1, Ciudad autonoma de Buenos aires, Argentina", points_only = FALSE)
comuna1_calles <- opq(comuna1) %>%
add_osm_feature(key = "highway") %>%
osmdata_sf()
ggplot()+
#geom_sf(data = sannics_calles)+
#geom_sf(data = santelmo_calles)+
#geom_sf(data = pmad_calles)+
geom_sf(data = monserrat_calles)+
geom_sf(data=casa_rosada_arte, aes(col= Type))+
labs(title= "Arte y entretenimiento en el microcentro",
subtitle= "CABA, Argentina",
caption= "Fuente: Open Street maps")+
scale_color_discrete(name = c("Tipo de entretenimiento"))+
theme_void()
ggplot()+
#geom_sf(data = sannics_calles)+
#geom_sf(data = santelmo_calles)+
#geom_sf(data = pmad_calles)+
geom_sf(data = monserrat_calles)+
geom_sf(data = comuna1)
ggplot()+
#geom_sf(data = sannics_calles)+
#geom_sf(data = santelmo_calles)+
#geom_sf(data = pmad_calles)+
geom_sf(data = monserrat_calles)+
geom_sf(data = comuna1_calles)
comuna1_calles <-st_intersection(monserrat_calles$osm_lines, comuna1)
comuna1_calles <- opq(comuna1) %>%
add_osm_feature(key = "highway") %>%
osmdata_sf()
comuna1_calles <-st_intersection(monserrat_calles$osm_lines, comuna1)
comuna1_calles <-st_intersection(comuna1_calles$osm_lines, comuna1)
geom_sf(data=casa_rosada_arte, aes(col= Type))+
labs(title= "Arte y entretenimiento en el microcentro",
subtitle= "CABA, Argentina",
caption= "Fuente: Open Street maps")+
scale_color_discrete(name = c("Tipo de entretenimiento"))+
theme_void()
ggplot()+
#geom_sf(data = sannics_calles)+
#geom_sf(data = santelmo_calles)+
#geom_sf(data = pmad_calles)+
geom_sf(data = monserrat_calles)+
geom_sf(data = comuna1_calles)
ggplot()+
#geom_sf(data = sannics_calles)+
#geom_sf(data = santelmo_calles)+
#geom_sf(data = pmad_calles)+
geom_sf(data = monserrat_calles)+
geom_sf(data = comuna1_calles)+
geom_sf(data=casa_rosada_arte, aes(col= Type))+
labs(title= "Arte y entretenimiento en el microcentro",
subtitle= "CABA, Argentina",
caption= "Fuente: Open Street maps")+
scale_color_discrete(name = c("Tipo de entretenimiento"))+
theme_void()
ggplot()+
#geom_sf(data = sannics_calles)+
#geom_sf(data = santelmo_calles)+
#geom_sf(data = pmad_calles)+
#geom_sf(data = monserrat_calles)+
geom_sf(data = comuna1_calles)+
geom_sf(data=casa_rosada_arte, aes(col= Type))+
labs(title= "Arte y entretenimiento en el microcentro",
subtitle= "CABA, Argentina",
caption= "Fuente: Open Street maps")+
scale_color_discrete(name = c("Tipo de entretenimiento"))+
theme_void()
barrios <- st_read("base_clase_4/barrios_caba/barrios_wgs84.shp")
microcentro <- c("SAN NICOLAS", "SAN TELMO", "MONSERRAT",
"PUERTO MADERO")
for(i in microcentro){
barrio <- barrios %>%
filter(BARRIO == i)
barrio_calles <- opq(barrio) %>%
add_osm_feature(key = "highway") %>%
osmdata_sf()
barrio_calles <- st_intersection(barrio_calles$osm_lines, barrio)
assign( paste0(i, "_calle"), barrio_calles ,envir= globalenv())
}
ggplot()+
geom_sf(data = `SAN NICOLAS_calle`)+
geom_sf(data =  `SAN TELMO_calle`)+
geom_sf(data = MONSERRAT_calle)+
geom_sf(data = `PUERTO MADERO_calle`)+
geom_sf(data=casa_rosada_arte, aes(col= Type))+
labs(title= "Arte y entretenimiento en el microcentro",
subtitle= "CABA, Argentina",
caption= "Fuente: Open Street maps")+
scale_color_discrete(name = c("Tipo de entretenimiento"))+
theme_void()
View(barrio)
View(barrios)
barrios <- st_read("base_clase_4/barrios_caba/barrios_wgs84.shp")
microcentro <- c("SAN NICOLAS", "SAN TELMO", "MONSERRAT",
"PUERTO MADERO", "RETIRO")
for(i in microcentro){
barrio <- barrios %>%
filter(BARRIO == i)
barrio_calles <- opq(barrio) %>%
add_osm_feature(key = "highway") %>%
osmdata_sf()
barrio_calles <- st_intersection(barrio_calles$osm_lines, barrio)
assign( paste0(i, "_calle"), barrio_calles ,envir= globalenv())
}
ggplot()+
geom_sf(data = `SAN NICOLAS_calle`)+
geom_sf(data =  `SAN TELMO_calle`)+
geom_sf(data = MONSERRAT_calle)+
geom_sf(data = `PUERTO MADERO_calle`)+
geom_sf(data=casa_rosada_arte, aes(col= Type))+
labs(title= "Arte y entretenimiento en el microcentro",
subtitle= "CABA, Argentina",
caption= "Fuente: Open Street maps")+
scale_color_discrete(name = c("Tipo de entretenimiento"))+
theme_void()
View(barrios)
ggplot()+
geom_sf(data = `SAN NICOLAS_calle`)+
geom_sf(data =  `SAN TELMO_calle`)+
geom_sf(data = MONSERRAT_calle)+
geom_sf(data = `PUERTO MADERO_calle`)+
geom_sf(data = RETIRO)+
geom_sf(data=casa_rosada_arte, aes(col= Type))+
labs(title= "Arte y entretenimiento en el microcentro",
subtitle= "CABA, Argentina",
caption= "Fuente: Open Street maps")+
scale_color_discrete(name = c("Tipo de entretenimiento"))+
theme_void()
ggplot()+
geom_sf(data = `SAN NICOLAS_calle`)+
geom_sf(data =  `SAN TELMO_calle`)+
geom_sf(data = MONSERRAT_calle)+
geom_sf(data = `PUERTO MADERO_calle`)+
geom_sf(data = RETIRO_calle)+
geom_sf(data=casa_rosada_arte, aes(col= Type))+
labs(title= "Arte y entretenimiento en el microcentro",
subtitle= "CABA, Argentina",
caption= "Fuente: Open Street maps")+
scale_color_discrete(name = c("Tipo de entretenimiento"))+
theme_void()
ggplot()+
geom_sf(data = `SAN NICOLAS_calle`)+
#geom_sf(data =  `SAN TELMO_calle`)+
geom_sf(data = MONSERRAT_calle)+
geom_sf(data = `PUERTO MADERO_calle`)+
geom_sf(data = RETIRO_calle)+
geom_sf(data=casa_rosada_arte, aes(col= Type))+
labs(title= "Arte y entretenimiento en el microcentro",
subtitle= "CABA, Argentina",
caption= "Fuente: Open Street maps")+
scale_color_discrete(name = c("Tipo de entretenimiento"))+
theme_void()
for(i in microcentro){
barrio <- barrios %>%
filter(BARRIO == i)
barrio_calles <- opq(barrio) %>%
add_osm_feature(key = "highway") %>%
osmdata_sf()
barrio_calles <- st_intersection(barrio_calles$osm_lines, barrio)
nombre <- gsub(" ", "", i)
assign( paste0(nombre, "_calle"), barrio_calles ,envir= globalenv())
}
quilmes <- nominatimlite::geo_lite_sf(address = "Partido de Quilmes,Buenos aires, Argentina", points_only = FALSE)
Quilmes_hospi <- opq(quilmes) %>%
add_osm_feature(key = "amenity", value = "hospital") %>%
osmdata_sf()
Quilmes_hospi <- st_intersection(Quilmes_hospi$osm_points, quilmes)
Quilmes_hospi = Quilmes_hospi %>%
mutate(image = sample("https://www.shareicon.net/download/48x48//2016/06/19/605365_hospital_48x48.png", size=49, replace = TRUE))
View(Quilmes_hospi)
for(i in 1:nrow(Quilmes_hospi)){
Quilmes_hospi$x[i] =  Quilmes_hospi$geometry[[i]][1]
Quilmes_hospi$y[i] =  Quilmes_hospi$geometry[[i]][2]
}
ggplot() +
geom_sf(data = quilmes)+
geom_sf(data = Quilmes_calles)+
geom_sf(data = filter(Quilmes_calles, str_detect(name, "Avenida")),
color = "green")+
geom_sf(data = Quilmes_rios, color = 'blue', size = 1.5)+
#geom_sf(data = Quilmes_hospi, color= "yellow")+
geom_image(data = Quilmes_hospi, aes(x,y, image = image), size=0.03, col="red")+
theme_void()+
theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+
labs(title = "Partido de Quilmes",
subtitle = "Provincia de Buenos Aires",
caption = "Fuente: Open Street Map")
Quilmes_calles <- st_intersection(Quilmes_calles$osm_lines, quilmes)
Quilmes_calles <- opq(quilmes) %>%
add_osm_feature(key = "highway") %>%
osmdata_sf()
Quilmes_calles <- st_intersection(Quilmes_calles$osm_lines, quilmes)
Quilmes_rios<- opq(quilmes) %>%
add_osm_feature(key = "waterway") %>%
osmdata_sf()
Quilmes_rios <- st_intersection(Quilmes_rios$osm_lines, quilmes)
ggplot() +
geom_sf(data = quilmes)+
geom_sf(data = Quilmes_calles)+
geom_sf(data = filter(Quilmes_calles, str_detect(name, "Avenida")),
color = "green")+
geom_sf(data = Quilmes_rios, color = 'blue', size = 1.5)+
#geom_sf(data = Quilmes_hospi, color= "yellow")+
geom_image(data = Quilmes_hospi, aes(x,y, image = image), size=0.03, col="red")+
theme_void()+
theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+
labs(title = "Partido de Quilmes",
subtitle = "Provincia de Buenos Aires",
caption = "Fuente: Open Street Map")
library(ggimage)
ggplot() +
geom_sf(data = quilmes)+
geom_sf(data = Quilmes_calles)+
geom_sf(data = filter(Quilmes_calles, str_detect(name, "Avenida")),
color = "green")+
geom_sf(data = Quilmes_rios, color = 'blue', size = 1.5)+
#geom_sf(data = Quilmes_hospi, color= "yellow")+
geom_image(data = Quilmes_hospi, aes(x,y, image = image), size=0.03, col="red")+
theme_void()+
theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+
labs(title = "Partido de Quilmes",
subtitle = "Provincia de Buenos Aires",
caption = "Fuente: Open Street Map")
carpeta <- "./obelisco"
file.exists(carpeta)
if (file.exists(subDir)){
} else {
dir.create(file.path(mainDir))
}
if (file.exists(carpeta)){
} else {
dir.create(file.path(carpeta))
}
st_write(resultado_sf, "./obelisco/obelisco.shp", crs=4326)
library(tmaptools)
library(RUMBA)
library(tidyverse)
library(sf)
library(ggmap)
library(osmdata)
library(nominatimlite)
library(arcgeocoder)
library(htmltools)
library(ggimage)
library(ggsn)
library(leaflet)
library(tmaptools)
library(viridisLite)
library(osrm)
library(units)
#install_github("wch/webshot")
library(htmlwidgets)
library(webshot)
#install.packages("nominatimlite")
